/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class JAsioWave */

#ifndef _Included_JAsioWave
#define _Included_JAsioWave
#ifdef __cplusplus
extern "C" {
#endif
#undef JAsioWave_MAX_DRIVER_NAMES
#define JAsioWave_MAX_DRIVER_NAMES 32L
#undef JAsioWave_BUFFER_SIZE_MIN
#define JAsioWave_BUFFER_SIZE_MIN 0L
#undef JAsioWave_BUFFER_SIZE_MAX
#define JAsioWave_BUFFER_SIZE_MAX 1L
#undef JAsioWave_BUFFER_SIZE_PREFERRED
#define JAsioWave_BUFFER_SIZE_PREFERRED 2L
/*
 * Class:     JAsioWave
 * Method:    _createBuffers
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_JAsioWave__1createBuffers
  (JNIEnv *, jobject, jint);

/*
 * Class:     JAsioWave
 * Method:    _displayChannelInfo
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_JAsioWave__1displayChannelInfo
  (JNIEnv *, jobject);

/*
 * Class:     JAsioWave
 * Method:    _getBufferSizes
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_JAsioWave__1getBufferSizes
  (JNIEnv *, jobject, jint);

/*
 * Class:     JAsioWave
 * Method:    _initAsioDriver
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_JAsioWave__1initAsioDriver
  (JNIEnv *, jobject, jstring);

/*
 * Class:     JAsioWave
 * Method:    _isReady
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_JAsioWave__1isReady
  (JNIEnv *, jobject);

/*
 * Class:     JAsioWave
 * Method:    _playSound
 * Signature: (FFFFFZZ)Z
 */
JNIEXPORT jboolean JNICALL Java_JAsioWave__1playSound
  (JNIEnv *, jobject, jfloat, jfloat, jfloat, jfloat, jfloat, jboolean, jboolean);

/*
 * Class:     JAsioWave
 * Method:    _registerThread
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_JAsioWave__1registerThread
  (JNIEnv *, jobject);

/*
 * Class:     JAsioWave
 * Method:    _resetSystem
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_JAsioWave__1resetSystem
  (JNIEnv *, jobject);

/*
 * Class:     JAsioWave
 * Method:    _setSampleRate
 * Signature: (F)F
 */
JNIEXPORT jfloat JNICALL Java_JAsioWave__1setSampleRate
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     JAsioWave
 * Method:    _getDriverNames
 * Signature: ([Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_JAsioWave__1getDriverNames
  (JNIEnv *, jclass, jobjectArray);

#ifdef __cplusplus
}
#endif
#endif
